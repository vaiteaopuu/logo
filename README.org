#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+TITLE: Logo with PIL (Pillow) module
#+DATE:
#+AUTHOR: Vaitea OPUU
#+EMAIL: vaitea.opuu@polytechnique.edu
#+LANGUAGE: fr
#+STARTUP: showall
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

* Description
The following python script (~logo.py~) is a simple module for the generation of
logo sequence from alignment file, seq file (the most simple alignment file: one
sequence per line), fasta file (all the sequence must have the same length) or
proteus output sequences.

* Usage
- Basic usage: ~--align~ / ~--proteus~ / ~--fasta~ / ~--seq~ represents the format of the
  input file (must be set).
#+begin_src bash
python logo.py data.seq
python logo.py data.aln --align
python logo.py proteus.dat --proteus
python logo.py proteus.dat --proteus -o proteus.png # will create a PNG proteus.png
python logo.py data.seq --seq -pp 501 530 400 401 -pi 0 1 2 3 # the position name of the first 4 amino acids are 501 530 400
#+end_src

- The script has a few optional arguments:
| arguments               | function                                                                                             |
|-------------------------+------------------------------------------------------------------------------------------------------|
| ~-o  --output~          | output file (name of the png file)                                                                   |
| ~-f  --font~            | font file to use, the default is stored in the repo                                                  |
| ~-c  --color~           | color file (amino acis or nuleotides + correponding color); X represents the gap/and unknown element |
| ~-he  --heigth~         | image total height                                                                                   |
| ~-wi  --width~          | image total width                                                                                    |
| ~-pp  --position_print~ | position id to keep in the image (ex: -pi 0 1 2 3)                                                   |
| ~-pi  --position_id~    | position name (if different from id in sequence) (ex: -pp 551 532 550)                               |
| ~-sc  --seq_col~        | proteus sequences are stored in a different column                                                   |
| ~-if  --id_font~        | position name size (ex: -if 90; means 90% of the actual size)                                        |
| ~-ra --rot_angle~       | rotation angle (integer) for position name                                                           |
| ~-r --rotate~           | flag (--rotation; means allow rotation for position id)                                              |
| ~--seq~                 | flag to read seq format                                                                              |
| ~--fasta~               | flag for read fasta format                                                                           |
| ~--align~               | flag for read Clustal alignment format                                                               |
| ~--proteus~             | flag for read proteus output format                                                                  |
| ~--transparency~        | flag to create transparent background png                                                            |
| ~-h, --help~            | show a short help                                                                                    |

* Requierments
- python >= 2.7
- PIL (Python Image Lybrary)

PIL installation
#+begin_src bash
pip install pillow
#+end_src

* Installation
In order to use this script, the following files (~logo.py~, ~color.dat~ and
~DejaVuSansMono-Bold.ttf~) in the same directory. Thus, the script can be called
from any other directory as follow:

#+begin_src bash
../../other_location/logo.py data.aln --align -o output --transparency --width 2000 --heigth 600 --rotate
#+end_src

* Example
#+begin_src bash
./logo.py example/test_data.aln --align -o example/output.png -he 200 -wi 500 -pi $(seq 0 10) --transparency
#+end_src

[[./example/output.png]]
